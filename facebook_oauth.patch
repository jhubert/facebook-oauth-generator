diff --git Gemfile Gemfile
index 1758ad6..93608cb 100644
--- Gemfile
+++ Gemfile
@@ -2,30 +2,7 @@ source 'http://rubygems.org'
 
 gem 'rails', '3.0.3'
 
-# Bundle edge Rails instead:
-# gem 'rails', :git => 'git://github.com/rails/rails.git'
-
 gem 'sqlite3-ruby', :require => 'sqlite3'
 
-# Use unicorn as the web server
-# gem 'unicorn'
-
-# Deploy with Capistrano
-# gem 'capistrano'
-
-# To use debugger (ruby-debug for Ruby 1.8.7+, ruby-debug19 for Ruby 1.9.2+)
-# gem 'ruby-debug'
-# gem 'ruby-debug19'
-
-# Bundle the extra gems:
-# gem 'bj'
-# gem 'nokogiri'
-# gem 'sqlite3-ruby', :require => 'sqlite3'
-# gem 'aws-s3', :require => 'aws/s3'
-
-# Bundle gems for the local environment. Make sure to
-# put test-only gems in this group so their generators
-# and rake tasks are available in development mode:
-# group :development, :test do
-#   gem 'webrat'
-# end
+gem 'authlogic', :git => 'git://github.com/odorcicd/authlogic.git', :branch => 'rails3'
+gem 'facebook_oauth', '0.2.2', :git => 'git://github.com/jhubert/facebook_oauth.git'
\ No newline at end of file
diff --git Gemfile.lock Gemfile.lock
index eebaa6a..d5c42ac 100644
--- Gemfile.lock
+++ Gemfile.lock
@@ -1,3 +1,20 @@
+GIT
+  remote: git://github.com/jhubert/facebook_oauth.git
+  revision: 5dfd0cb93bc2dc31f3761e73278965bbaf4ef754
+  specs:
+    facebook_oauth (0.2.2)
+      json (>= 1.1.9)
+      mime-types (>= 1.16)
+      oauth2 (>= 0.0.8)
+
+GIT
+  remote: git://github.com/odorcicd/authlogic.git
+  revision: a087ad0cba3c165ba22fcf176c28b6f7517931e8
+  branch: rails3
+  specs:
+    authlogic (2.1.3)
+      activesupport
+
 GEM
   remote: http://rubygems.org/
   specs:
@@ -28,17 +45,28 @@ GEM
       activemodel (= 3.0.3)
       activesupport (= 3.0.3)
     activesupport (3.0.3)
+    addressable (2.2.2)
     arel (2.0.6)
     builder (2.1.2)
     erubis (2.6.6)
       abstract (>= 1.0.0)
+    faraday (0.5.3)
+      addressable (~> 2.2.2)
+      multipart-post (~> 1.0.1)
+      rack (>= 1.1.0, < 2)
     i18n (0.5.0)
+    json (1.4.6)
     mail (2.2.14)
       activesupport (>= 2.3.6)
       i18n (>= 0.4.0)
       mime-types (~> 1.16)
       treetop (~> 1.4.8)
     mime-types (1.16)
+    multi_json (0.0.5)
+    multipart-post (1.0.1)
+    oauth2 (0.1.0)
+      faraday (~> 0.5.0)
+      multi_json (~> 0.0.4)
     polyglot (0.3.1)
     rack (1.2.1)
     rack-mount (0.6.13)
@@ -69,5 +97,7 @@ PLATFORMS
   ruby
 
 DEPENDENCIES
+  authlogic!
+  facebook_oauth (= 0.2.2)!
   rails (= 3.0.3)
   sqlite3-ruby
diff --git app/controllers/application_controller.rb app/controllers/application_controller.rb
index e8065d9..8d2a5f5 100644
--- app/controllers/application_controller.rb
+++ app/controllers/application_controller.rb
@@ -1,3 +1,52 @@
 class ApplicationController < ActionController::Base
   protect_from_forgery
+
+  helper_method :current_user, :logged_in?
+
+  rescue_from ActiveRecord::RecordInvalid, :with => :render_invalid_record
+
+  private
+
+  def render_invalid_record(exception)
+    render :action => (exception.record.new_record? ? 'new' : 'edit')
+  end
+
+  def logged_in?
+    !current_user.nil?
+  end
+
+  def current_user_session
+    @current_user_session ||= UserSession.find
+  end
+
+  def current_user
+    @current_user ||= current_user_session && current_user_session.record
+  end
+
+  def require_user
+    unless current_user
+      store_location
+      flash[:notice] = "You must be logged in to access this page"
+      redirect_to login_url
+      return false
+    end
+  end
+
+  def require_no_user
+    if current_user
+      store_location
+      flash[:notice] = "You must be logged out to access this page"
+      redirect_to account_root_url
+      return false
+    end
+  end
+
+  def store_location
+    session[:return_to] = request.request_uri
+  end
+
+  def redirect_back_or_default(default)
+    redirect_to(session[:return_to] || default)
+    session[:return_to] = nil
+  end
 end
diff --git app/controllers/general_controller.rb app/controllers/general_controller.rb
new file mode 100644
index 0000000..0902f09
--- /dev/null
+++ app/controllers/general_controller.rb
@@ -0,0 +1,5 @@
+class GeneralController < ApplicationController
+  def index
+  end
+
+end
diff --git app/controllers/sessions_controller.rb app/controllers/sessions_controller.rb
new file mode 100755
index 0000000..53c1aa1
--- /dev/null
+++ app/controllers/sessions_controller.rb
@@ -0,0 +1,57 @@
+class SessionsController < ApplicationController
+  before_filter :require_no_user, :only => [:new, :create]
+  before_filter :require_user, :only => :destroy
+
+  def new
+    @user_session = UserSession.new
+  end
+
+  def create
+    @user_session = UserSession.new(params[:user_session])
+    user_from_facebook_oauth if params[:code]
+    if @user_session.save
+      flash[:notice] = "Login successful!"
+      redirect_back_or_default root_path
+    else
+      render :action => :new
+    end
+  end
+
+  def destroy
+    current_user_session.destroy if current_user_session
+    fb_cookie_for_app_id = nil
+    flash[:notice] = "Logout successful!"
+    redirect_back_or_default root_path
+  end
+
+  private
+
+  def user_from_facebook_oauth
+    if (params[:code])
+      client = FacebookOAuth::Client.new(:callback => create_session_url)
+      access_token = client.authorize(:code => params[:code])
+      ud = client.me.info
+      @user = User.find_by_facebook_uid(ud['id'])
+      if @user.nil?
+        @user = User.find_by_email(ud['email'])
+        if @user
+          @user.update_attributes({
+           :facebook_uid => ud['id'],
+           :facebook_token => access_token.token
+          })
+        else
+          @user = User.create(
+                    :facebook_uid => ud['id'], 
+                    :email => ud['email'],
+                    :firstname => ud['first_name'],
+                    :lastname => ud['last_name'],
+                    :facebook_token => access_token.token
+                  )
+        end
+      else
+        @user.update_attribute(:facebook_token, access_token.token)
+      end
+      @user_session = UserSession.new(@user) if @user
+    end
+  end
+end
\ No newline at end of file
diff --git app/helpers/general_helper.rb app/helpers/general_helper.rb
new file mode 100644
index 0000000..5dcc032
--- /dev/null
+++ app/helpers/general_helper.rb
@@ -0,0 +1,2 @@
+module GeneralHelper
+end
diff --git app/helpers/sessions_helper.rb app/helpers/sessions_helper.rb
new file mode 100644
index 0000000..1dda21e
--- /dev/null
+++ app/helpers/sessions_helper.rb
@@ -0,0 +1,14 @@
+module SessionsHelper
+  def fb_login_button(content=nil)
+    content = "<img class=\"btn_fb\" src=\"http://static.bagcheck.org/btn_facebook_signup10252010.png\"  alt=\"Sign Up using Facebook\" >" unless content
+    return "<a href=\"https://graph.facebook.com/oauth/authorize?client_id=#{FACEBOOK['application_id']}&amp;scope=user_about_me,user_birthday,email,offline_access&amp;redirect_uri=#{create_session_url}\">#{content}</a>".html_safe
+  end
+
+  def login_link
+    if logged_in?
+      link_to('Logout',logout_path)
+    else
+      fb_login_button('Login with your Facebook account')
+    end
+  end
+end
\ No newline at end of file
diff --git app/models/user.rb app/models/user.rb
new file mode 100755
index 0000000..be95108
--- /dev/null
+++ app/models/user.rb
@@ -0,0 +1,78 @@
+require 'digest/sha1'
+
+class User < ActiveRecord::Base
+  acts_as_authentic do |c|
+    c.login_field = 'email'
+    c.validate_email_field = false
+    c.validates_length_of_password_confirmation_field_options( :minimum => 0 )
+  end
+
+  validates_length_of :email, :within => 6..100, :if => :is_not_fb_user?
+  validates_format_of :email, :with => Authlogic::Regex.email, :if => :is_not_fb_user?
+  validates_uniqueness_of :email, :if => :is_not_fb_user?
+
+  # Relationships
+
+  before_validation :generate_password_if_empty
+
+  # HACK HACK HACK -- how to do attr_accessible from here?
+  # prevents a user from submitting a crafted form that bypasses activation
+  # anything else you want your user to change should be added here.
+  attr_accessible :facebook_uid, :facebook_token, :email, :firstname, :lastname, :password, :password_confirmation
+
+  def is_fb_user?
+    return self.facebook_uid.to_i > 0
+  end
+  def is_not_fb_user?; !self.is_fb_user? end
+
+  def require_password?
+    if self.is_fb_user?
+      return false
+    else
+      return new_record? || password_changed? || send(crypted_password_field).blank?
+    end
+  end
+
+  def email=(value)
+    write_attribute :email, (value ? value.downcase : nil)
+  end
+
+  def using_facebook?
+    is_fb_user?
+  end
+
+  def using_password?
+    !is_fb_user?
+  end
+
+  # Computed Attributes
+
+  # Show the user's first name and last initial
+  def name
+    [firstname, lastname ? lastname[0,1] : ''].join(' ')
+  end
+
+  # Show the user's full name
+  def fullname
+    [firstname, lastname].join(' ')
+  end
+
+  def fullname=(name)
+    self.firstname, self.lastname = name.split(' ', 2)
+  end
+
+  def to_s
+    name
+  end
+
+  def email_with_name
+    "#{name} <#{email}>"
+  end
+
+  protected
+
+    def generate_password_if_empty
+      self.password = self.password_confirmation = 'password1' if self.password.blank?
+    end
+
+end
\ No newline at end of file
diff --git app/models/user_session.rb app/models/user_session.rb
new file mode 100644
index 0000000..8c19d19
--- /dev/null
+++ app/models/user_session.rb
@@ -0,0 +1,2 @@
+class UserSession < Authlogic::Session::Base
+end
\ No newline at end of file
diff --git app/views/general/index.html.erb app/views/general/index.html.erb
new file mode 100644
index 0000000..c4c3306
--- /dev/null
+++ app/views/general/index.html.erb
@@ -0,0 +1,4 @@
+<h1>General#index</h1>
+<p>Find me in app/views/general/index.html.erb</p>
+
+<%= debug current_user if logged_in? %>
\ No newline at end of file
diff --git app/views/layouts/application.html.erb app/views/layouts/application.html.erb
index 13d7beb..1e795d3 100644
--- app/views/layouts/application.html.erb
+++ app/views/layouts/application.html.erb
@@ -7,7 +7,7 @@
   <%= csrf_meta_tag %>
 </head>
 <body>
-
+<%= login_link %>
 <%= yield %>
 
 </body>
diff --git app/views/sessions/new.html.erb app/views/sessions/new.html.erb
new file mode 100644
index 0000000..dd50d20
--- /dev/null
+++ app/views/sessions/new.html.erb
@@ -0,0 +1 @@
+<%= fb_login_button %>
\ No newline at end of file
diff --git config/facebook.yml config/facebook.yml
new file mode 100644
index 0000000..be48fd0
--- /dev/null
+++ config/facebook.yml
@@ -0,0 +1,19 @@
+# The api key, secret key, and canvas page name are required to get started
+# Tunnel configuration is only needed if you are going to use the facebooker:tunnel Rake tasks
+# Your callback url in Facebook should be set to http://public_host:public_port
+# If you're building a Facebook connect site, 
+#    change the value of set_asset_host_to_callback_url to false
+# To develop for the new profile design, add the following key..
+# api: new
+# remove the key or set it to anything else to use the old facebook design.
+# This should only be necessary until the final version of the new profile is released.
+
+development:
+  application_id:
+  application_secret:
+  api_key:
+
+production:
+  application_id:
+  application_secret:
+  api_key:
diff --git config/initializers/facebook.rb config/initializers/facebook.rb
new file mode 100644
index 0000000..4d896b0
--- /dev/null
+++ config/initializers/facebook.rb
@@ -0,0 +1 @@
+FACEBOOK = YAML::load(File.open("#{Rails.root}/config/facebook.yml"))[Rails.env.to_s]
\ No newline at end of file
diff --git config/routes.rb config/routes.rb
index e3346ec..c55cf1a 100644
--- config/routes.rb
+++ config/routes.rb
@@ -1,58 +1,7 @@
 [APPNAME].routes.draw do
-  # The priority is based upon order of creation:
-  # first created -> highest priority.
+  match '/login' => 'sessions#new', :as => :login
+  match '/session' => 'sessions#create', :as => :create_session
+  match '/logout' => 'sessions#destroy', :as => :logout
 
-  # Sample of regular route:
-  #   match 'products/:id' => 'catalog#view'
-  # Keep in mind you can assign values other than :controller and :action
-
-  # Sample of named route:
-  #   match 'products/:id/purchase' => 'catalog#purchase', :as => :purchase
-  # This route can be invoked with purchase_url(:id => product.id)
-
-  # Sample resource route (maps HTTP verbs to controller actions automatically):
-  #   resources :products
-
-  # Sample resource route with options:
-  #   resources :products do
-  #     member do
-  #       get 'short'
-  #       post 'toggle'
-  #     end
-  #
-  #     collection do
-  #       get 'sold'
-  #     end
-  #   end
-
-  # Sample resource route with sub-resources:
-  #   resources :products do
-  #     resources :comments, :sales
-  #     resource :seller
-  #   end
-
-  # Sample resource route with more complex sub-resources
-  #   resources :products do
-  #     resources :comments
-  #     resources :sales do
-  #       get 'recent', :on => :collection
-  #     end
-  #   end
-
-  # Sample resource route within a namespace:
-  #   namespace :admin do
-  #     # Directs /admin/products/* to Admin::ProductsController
-  #     # (app/controllers/admin/products_controller.rb)
-  #     resources :products
-  #   end
-
-  # You can have the root of your site routed with "root"
-  # just remember to delete public/index.html.
-  # root :to => "welcome#index"
-
-  # See how all your routes lay out with "rake routes"
-
-  # This is a legacy wild controller route that's not recommended for RESTful applications.
-  # Note: This route will make all actions in every controller accessible via GET requests.
-  # match ':controller(/:action(/:id(.:format)))'
+  root :to => 'general#index'
 end
diff --git db/migrate/20110109195917_create_users.rb db/migrate/20110109195917_create_users.rb
new file mode 100644
index 0000000..29546c0
--- /dev/null
+++ db/migrate/20110109195917_create_users.rb
@@ -0,0 +1,22 @@
+class CreateUsers < ActiveRecord::Migration
+  def self.up
+    create_table :users do |t|
+      t.string :facebook_uid
+      t.string :facebook_session_key
+      t.string :facebook_token
+      t.string :firstname,              :limit => 50
+      t.string :lastname,               :limit => 50
+      t.string :email,                  :limit => 100
+      t.string :crypted_password
+      t.string :password_salt,          :null => false
+      t.string :persistence_token,      :null => false
+      t.timestamps
+    end
+    execute("ALTER TABLE users CHANGE facebook_uid facebook_uid BIGINT") if adapter_name.to_s == "MySQL"
+    add_index "users", ["facebook_uid"], :name => "index_accounts_on_facebook_uid"
+  end
+
+  def self.down
+    drop_table :users
+  end
+end
diff --git public/index.html public/index.html
deleted file mode 100644
index 75d5edd..0000000
--- public/index.html
+++ /dev/null
@@ -1,239 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <title>Ruby on Rails: Welcome aboard</title>
-    <style type="text/css" media="screen">
-      body {
-        margin: 0;
-        margin-bottom: 25px;
-        padding: 0;
-        background-color: #f0f0f0;
-        font-family: "Lucida Grande", "Bitstream Vera Sans", "Verdana";
-        font-size: 13px;
-        color: #333;
-      }
-
-      h1 {
-        font-size: 28px;
-        color: #000;
-      }
-
-      a  {color: #03c}
-      a:hover {
-        background-color: #03c;
-        color: white;
-        text-decoration: none;
-      }
-
-
-      #page {
-        background-color: #f0f0f0;
-        width: 750px;
-        margin: 0;
-        margin-left: auto;
-        margin-right: auto;
-      }
-
-      #content {
-        float: left;
-        background-color: white;
-        border: 3px solid #aaa;
-        border-top: none;
-        padding: 25px;
-        width: 500px;
-      }
-
-      #sidebar {
-        float: right;
-        width: 175px;
-      }
-
-      #footer {
-        clear: both;
-      }
-
-
-      #header, #about, #getting-started {
-        padding-left: 75px;
-        padding-right: 30px;
-      }
-
-
-      #header {
-        background-image: url("images/rails.png");
-        background-repeat: no-repeat;
-        background-position: top left;
-        height: 64px;
-      }
-      #header h1, #header h2 {margin: 0}
-      #header h2 {
-        color: #888;
-        font-weight: normal;
-        font-size: 16px;
-      }
-
-
-      #about h3 {
-        margin: 0;
-        margin-bottom: 10px;
-        font-size: 14px;
-      }
-
-      #about-content {
-        background-color: #ffd;
-        border: 1px solid #fc0;
-        margin-left: -55px;
-        margin-right: -10px;
-      }
-      #about-content table {
-        margin-top: 10px;
-        margin-bottom: 10px;
-        font-size: 11px;
-        border-collapse: collapse;
-      }
-      #about-content td {
-        padding: 10px;
-        padding-top: 3px;
-        padding-bottom: 3px;
-      }
-      #about-content td.name  {color: #555}
-      #about-content td.value {color: #000}
-
-      #about-content ul {
-        padding: 0;
-        list-style-type: none;
-      }
-
-      #about-content.failure {
-        background-color: #fcc;
-        border: 1px solid #f00;
-      }
-      #about-content.failure p {
-        margin: 0;
-        padding: 10px;
-      }
-
-
-      #getting-started {
-        border-top: 1px solid #ccc;
-        margin-top: 25px;
-        padding-top: 15px;
-      }
-      #getting-started h1 {
-        margin: 0;
-        font-size: 20px;
-      }
-      #getting-started h2 {
-        margin: 0;
-        font-size: 14px;
-        font-weight: normal;
-        color: #333;
-        margin-bottom: 25px;
-      }
-      #getting-started ol {
-        margin-left: 0;
-        padding-left: 0;
-      }
-      #getting-started li {
-        font-size: 18px;
-        color: #888;
-        margin-bottom: 25px;
-      }
-      #getting-started li h2 {
-        margin: 0;
-        font-weight: normal;
-        font-size: 18px;
-        color: #333;
-      }
-      #getting-started li p {
-        color: #555;
-        font-size: 13px;
-      }
-
-
-      #sidebar ul {
-        margin-left: 0;
-        padding-left: 0;
-      }
-      #sidebar ul h3 {
-        margin-top: 25px;
-        font-size: 16px;
-        padding-bottom: 10px;
-        border-bottom: 1px solid #ccc;
-      }
-      #sidebar li {
-        list-style-type: none;
-      }
-      #sidebar ul.links li {
-        margin-bottom: 5px;
-      }
-
-    </style>
-    <script type="text/javascript">
-      function about() {
-        info = document.getElementById('about-content');
-        if (window.XMLHttpRequest)
-          { xhr = new XMLHttpRequest(); }
-        else
-          { xhr = new ActiveXObject("Microsoft.XMLHTTP"); }
-        xhr.open("GET","rails/info/properties",false);
-        xhr.send("");
-        info.innerHTML = xhr.responseText;
-        info.style.display = 'block'
-      }
-    </script>
-  </head>
-  <body>
-    <div id="page">
-      <div id="sidebar">
-        <ul id="sidebar-items">
-          <li>
-            <h3>Browse the documentation</h3>
-            <ul class="links">
-              <li><a href="http://api.rubyonrails.org/">Rails API</a></li>
-              <li><a href="http://stdlib.rubyonrails.org/">Ruby standard library</a></li>
-              <li><a href="http://corelib.rubyonrails.org/">Ruby core</a></li>
-              <li><a href="http://guides.rubyonrails.org/">Rails Guides</a></li>
-            </ul>
-          </li>
-        </ul>
-      </div>
-
-      <div id="content">
-        <div id="header">
-          <h1>Welcome aboard</h1>
-          <h2>You&rsquo;re riding Ruby on Rails!</h2>
-        </div>
-
-        <div id="about">
-          <h3><a href="rails/info/properties" onclick="about(); return false">About your application&rsquo;s environment</a></h3>
-          <div id="about-content" style="display: none"></div>
-        </div>
-
-        <div id="getting-started">
-          <h1>Getting started</h1>
-          <h2>Here&rsquo;s how to get rolling:</h2>
-
-          <ol>
-            <li>
-              <h2>Use <code>rails generate</code> to create your models and controllers</h2>
-              <p>To see all available options, run it without parameters.</p>
-            </li>
-
-            <li>
-              <h2>Set up a default route and remove or rename this file</h2>
-              <p>Routes are set up in config/routes.rb.</p>
-            </li>
-
-            <li>
-              <h2>Create your database</h2>
-              <p>Run <code>rake db:migrate</code> to create your database. If you're not using SQLite (the default), edit <code>config/database.yml</code> with your username and password.</p>
-            </li>
-          </ol>
-        </div>
-      </div>
-
-      <div id="footer">&nbsp;</div>
-    </div>
-  </body>
-</html>
diff --git test/fixtures/users.yml test/fixtures/users.yml
new file mode 100644
index 0000000..6f51c56
--- /dev/null
+++ test/fixtures/users.yml
@@ -0,0 +1,23 @@
+# Read about fixtures at http://ar.rubyonrails.org/classes/Fixtures.html
+
+one:
+  facebook_id: 1
+  facebook_session_key: MyString
+  facebook_token: MyString
+  firstname: MyString
+  lastname: MyString
+  email: MyString
+  crypted_password: MyString
+  password_salt: MyString
+  persistence_token: MyString
+
+two:
+  facebook_id: 1
+  facebook_session_key: MyString
+  facebook_token: MyString
+  firstname: MyString
+  lastname: MyString
+  email: MyString
+  crypted_password: MyString
+  password_salt: MyString
+  persistence_token: MyString
diff --git test/functional/general_controller_test.rb test/functional/general_controller_test.rb
new file mode 100644
index 0000000..7781fc8
--- /dev/null
+++ test/functional/general_controller_test.rb
@@ -0,0 +1,9 @@
+require 'test_helper'
+
+class GeneralControllerTest < ActionController::TestCase
+  test "should get index" do
+    get :index
+    assert_response :success
+  end
+
+end
diff --git test/unit/helpers/general_helper_test.rb test/unit/helpers/general_helper_test.rb
new file mode 100644
index 0000000..5ae6bb7
--- /dev/null
+++ test/unit/helpers/general_helper_test.rb
@@ -0,0 +1,4 @@
+require 'test_helper'
+
+class GeneralHelperTest < ActionView::TestCase
+end
diff --git test/unit/user_test.rb test/unit/user_test.rb
new file mode 100644
index 0000000..a64d2d3
--- /dev/null
+++ test/unit/user_test.rb
@@ -0,0 +1,8 @@
+require 'test_helper'
+
+class UserTest < ActiveSupport::TestCase
+  # Replace this with your real tests.
+  test "the truth" do
+    assert true
+  end
+end